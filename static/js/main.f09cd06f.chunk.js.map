{"version":3,"sources":["components/EmployeeRow.js","components/TableSearch.js","components/HeaderRow.js","components/Button.js","components/FooterRow.js","components/EmployeeTable.js","utils/sort.js","components/Container.js","App.js","index.js"],"names":["EmployeeRow","name","location","registered","email","picture","className","src","thumbnail","alt","first","last","country","moment","date","fromNow","TableSearch","inputHandler","searchTerm","resultsPerPage","value","onChange","xmlns","viewBox","d","type","placeholder","HeaderRow","sortBy","sortData","onClick","Button","handleClick","children","FooterRow","currentIndex","results","handlePrevPage","handleNextPage","EmployeeTable","data","map","employee","index","key","sortByLastNameAsc","a","b","nameA","toUpperCase","nameB","sortByLastNameDesc","sortByCountryAsc","sortByCountryDesc","sortByDateAsc","sortByDateDesc","sortByEmailAsc","sortByEmailDesc","Container","state","filteredData","props","pages","length","currentPage","sortType","event","textContent","target","console","log","setState","sort","handleInputChange","filter","String","toLowerCase","includes","Math","ceil","parseInt","this","slice","Component","App","ReactDOM","render","document","getElementById"],"mappings":"ySAGe,SAASA,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,SACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,MACAC,EACC,EADDA,QAEA,OACE,4BACE,wBAAIC,UAAU,uDACZ,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,2BACb,yBACEA,UAAU,6BACVC,IAAKF,EAAQG,UACbC,IAAI,MAGR,yBAAKH,UAAU,QACb,uBAAGA,UAAU,oCACVL,EAAKS,MADR,IACgBT,EAAKU,SAK3B,wBAAIL,UAAU,uDACZ,uBAAGA,UAAU,oCAAoCJ,EAASU,UAE5D,wBAAIN,UAAU,uDACZ,uBAAGA,UAAU,oCACVO,IAAOV,EAAWW,MAAMC,YAG7B,wBAAIT,UAAU,uDACZ,uBAAGA,UAAU,oCAAoCF,KCnC1C,SAASY,EAAT,GAIX,IAHFC,EAGC,EAHDA,aACAC,EAEC,EAFDA,WACAC,EACC,EADDA,eAEA,OACE,yBAAKb,UAAU,kCACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,YACb,4BACEL,KAAK,iBACLmB,MAAOD,EACPE,SAAUJ,EACVX,UAAU,oMAEV,qCACA,sCACA,uCAEF,yBAAKA,UAAU,uFACb,yBACEA,UAAU,uBACVgB,MAAM,6BACNC,QAAQ,aAER,0BAAMC,EAAE,mFAKhB,yBAAKlB,UAAU,kBACb,0BAAMA,UAAU,2DACd,yBACEiB,QAAQ,YACRjB,UAAU,sCAEV,0BAAMkB,EAAE,4HAGZ,2BACEJ,MAAOF,EACPjB,KAAK,aACLoB,SAAUJ,EACVQ,KAAK,OACLC,YAAY,SACZpB,UAAU,6PC7CL,SAASqB,EAAT,GAA0C,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,SACtCvB,EACF,8GACF,OACE,4BACE,wBACEA,UACa,SAAXsB,EACItB,EAAY,0BACZA,EAAY,8BAElBwB,QAASD,GANX,QAUA,wBACEvB,UACa,YAAXsB,EACItB,EAAY,0BACZA,EAAY,8BAElBwB,QAASD,GANX,WAUA,wBACEvB,UACa,iBAAXsB,EACItB,EAAY,0BACZA,EAAY,8BAElBwB,QAASD,GANX,gBAUA,wBACEvB,UACa,UAAXsB,EACItB,EAAY,0BACZA,EAAY,8BAElBwB,QAASD,GANX,UCnCS,SAASE,EAAT,GAAuD,IAArCC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,SAAU3B,EAAa,EAAbA,UACtD,OACE,4BACEA,UACE,+EACAA,EAEFwB,QAASE,GAERC,GCRQ,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,aACAhB,EAIC,EAJDA,eACAiB,EAGC,EAHDA,QACAC,EAEC,EAFDA,eACAC,EACC,EADDA,eAEA,OACE,yBAAKhC,UAAU,mGACb,0BAAMA,UAAU,oCAAhB,WACW6B,EAAe,EAD1B,OACiCA,EAAehB,EADhD,MACmE,IAChEiB,GAEH,yBAAK9B,UAAU,4BACb,kBAACyB,EAAD,CAAQC,YAAaK,EAAgB/B,UAAW,aAAhD,QAGA,kBAACyB,EAAD,CAAQC,YAAaM,EAAgBhC,UAAW,aAAhD,UCdO,SAASiC,EAAT,GAWX,IAVFtB,EAUC,EAVDA,aACAC,EASC,EATDA,WACAsB,EAQC,EARDA,KACAJ,EAOC,EAPDA,QACAD,EAMC,EANDA,aACAhB,EAKC,EALDA,eACAkB,EAIC,EAJDA,eACAC,EAGC,EAHDA,eACAT,EAEC,EAFDA,SACAD,EACC,EADDA,OAEA,OACE,yBAAKtB,UAAU,kCACb,yBAAKA,UAAU,QACb,6BACE,wBAAIA,UAAU,wCAAd,UAEF,kBAACU,EAAD,CACEC,aAAcA,EACdC,WAAYA,EACZC,eAAgBA,IAElB,yBAAKb,UAAU,oDACb,yBAAKA,UAAU,6DACb,2BAAOA,UAAU,6BACf,+BACE,kBAACqB,EAAD,CAAWC,OAAQA,EAAQC,SAAUA,KAEvC,+BACGW,EAAKC,KAAI,SAACC,EAAUC,GAAX,OACR,kBAAC3C,EAAD,eAAa4C,IAAKD,GAAWD,SAInC,kBAACR,EAAD,CACEE,QAASA,EACTD,aAAcA,EACdhB,eAAgBA,EAChBkB,eAAgBA,EAChBC,eAAgBA,QC9CvB,IAAMO,EAAoB,SAACC,EAAGC,GACnC,IAAMC,EAAQF,EAAE7C,KAAKU,KAAKsC,cACpBC,EAAQH,EAAE9C,KAAKU,KAAKsC,cAC1B,OAAID,EAAQE,GACF,EAENF,EAAQE,EACH,EAGF,GAGIC,EAAqB,SAACL,EAAGC,GACpC,IAAMC,EAAQF,EAAE7C,KAAKU,KAAKsC,cACpBC,EAAQH,EAAE9C,KAAKU,KAAKsC,cAC1B,OAAID,EAAQE,EACH,EAELF,EAAQE,GACF,EAGH,GAGIE,EAAmB,SAACN,EAAGC,GAClC,IAAMC,EAAQF,EAAE5C,SAASU,QAAQqC,cAC3BC,EAAQH,EAAE7C,SAASU,QAAQqC,cACjC,OAAID,EAAQE,GACF,EAENF,EAAQE,EACH,EAGF,GAGIG,EAAoB,SAACP,EAAGC,GACnC,IAAMC,EAAQF,EAAE5C,SAASU,QAAQqC,cAC3BC,EAAQH,EAAE7C,SAASU,QAAQqC,cACjC,OAAID,EAAQE,EACH,EAELF,EAAQE,GACF,EAGH,GAGII,EAAgB,SAACR,EAAGC,GAC/B,IAAMC,EAAQF,EAAE3C,WAAWW,KACrBoC,EAAQH,EAAE5C,WAAWW,KAC3B,OAAIkC,EAAQE,GACF,EAENF,EAAQE,EACH,EAGF,GAGIK,EAAiB,SAACT,EAAGC,GAChC,IAAMC,EAAQF,EAAE3C,WAAWW,KACrBoC,EAAQH,EAAE5C,WAAWW,KAC3B,OAAIkC,EAAQE,EACH,EAELF,EAAQE,GACF,EAGH,GAGIM,EAAiB,SAACV,EAAGC,GAChC,IAAMC,EAAQF,EAAE1C,MAAM6C,cAChBC,EAAQH,EAAE3C,MAAM6C,cACtB,OAAID,EAAQE,GACF,EAENF,EAAQE,EACH,EAGF,GAGIO,EAAkB,SAACX,EAAGC,GACjC,IAAMC,EAAQF,EAAE1C,MAAM6C,cAChBC,EAAQH,EAAE3C,MAAM6C,cACtB,OAAID,EAAQE,EACH,EAELF,EAAQE,GACF,EAGH,GCxFYQ,E,2MACnBC,MAAQ,CACNzC,WAAY,GACZ0C,aAAc,EAAKC,MAAMrB,KACzBrB,eAAgB,EAChB2C,MAAO,EAAKD,MAAMrB,KAAKuB,OAAS,EAChCC,YAAa,EACbpC,OAAQ,GACRqC,SAAU,I,EAGZpC,SAAW,SAAAqC,GAAU,IACXC,EAAgBD,EAAME,OAAtBD,YAGR,OAFAE,QAAQC,IAAIH,GAEJA,GACN,IAAK,OACyB,QAAxB,EAAKR,MAAMM,SACb,EAAKM,SAAS,CACZ3C,OAAQuC,EACRF,SAAU,OACVL,aAAc,EAAKD,MAAMC,aAAaY,KAAKrB,KAG7C,EAAKoB,SAAS,CACZ3C,OAAQuC,EACRF,SAAU,MACVL,aAAc,EAAKD,MAAMC,aAAaY,KAAK3B,KAG/C,MACF,IAAK,UACyB,QAAxB,EAAKc,MAAMM,SACb,EAAKM,SAAS,CACZN,SAAU,OACVrC,OAAQsC,EAAME,OAAOD,YACrBP,aAAc,EAAKD,MAAMC,aAAaY,KAAKnB,KAG7C,EAAKkB,SAAS,CACZN,SAAU,MACVrC,OAAQuC,EACRP,aAAc,EAAKD,MAAMC,aAAaY,KAAKpB,KAG/C,MACF,IAAK,eACyB,QAAxB,EAAKO,MAAMM,SACb,EAAKM,SAAS,CACZN,SAAU,OACVrC,OAAQsC,EAAME,OAAOD,YACrBP,aAAc,EAAKD,MAAMC,aAAaY,KAAKjB,KAG7C,EAAKgB,SAAS,CACZN,SAAU,MACVrC,OAAQuC,EACRP,aAAc,EAAKD,MAAMC,aAAaY,KAAKlB,KAG/C,MAEF,IAAK,QACyB,QAAxB,EAAKK,MAAMM,SACb,EAAKM,SAAS,CACZN,SAAU,OACVrC,OAAQsC,EAAME,OAAOD,YACrBP,aAAc,EAAKD,MAAMC,aAAaY,KAAKf,KAG7C,EAAKc,SAAS,CACZN,SAAU,MACVrC,OAAQuC,EACRP,aAAc,EAAKD,MAAMC,aAAaY,KAAKhB,O,EAUrDnB,eAAiB,WACX,EAAKsB,MAAMK,YAAc,GAC3B,EAAKO,SAAS,CACZP,YAAa,EAAKL,MAAMK,YAAc,K,EAK5C1B,eAAiB,WACX,EAAKqB,MAAMK,YAAc,EAAKL,MAAMG,MAAQ,GAC9C,EAAKS,SAAS,CACZP,YAAa,EAAKL,MAAMK,YAAc,K,EAK5CS,kBAAoB,SAAAP,GAAS,MAELA,EAAME,OAAtBnE,EAFqB,EAErBA,KAAMmB,EAFe,EAEfA,MAEC,eAATnB,GACF,EAAKsE,SACH,CACErD,WAAYE,EACZwC,aAAc,EAAKC,MAAMrB,KAAKkC,QAAO,YAAgC,IAA7BzE,EAA4B,EAA5BA,KAAMG,EAAsB,EAAtBA,MAAOF,EAAe,EAAfA,SAInD,OAHkByE,OAChB1E,EAAKS,MAAQT,EAAKU,KAAOP,EAAQF,EAASU,SAC1CgE,cACeC,SAASzD,EAAMwD,oBAGpC,WACE,EAAKL,SAAS,CACZP,YAAa,EACbF,MAAOgB,KAAKC,KACV,EAAKpB,MAAMC,aAAaG,OAAS,EAAKJ,MAAMxC,qBAOzC,mBAATlB,GACF,EAAKsE,SACH,CACEpD,eAAgB6D,SAAS5D,KAE3B,WACE,EAAKmD,SAAS,CACZP,YAAa,EACbF,MAAOgB,KAAKC,KACV,EAAKpB,MAAMC,aAAaG,OAAS,EAAKJ,MAAMxC,sB,wEAStD,IAAMgB,EAAe8C,KAAKtB,MAAMK,YAAciB,KAAKtB,MAAMxC,eACzD,OACE,6BACE,kBAACoB,EAAD,CACErB,WAAY+D,KAAKtB,MAAMzC,WACvBD,aAAcgE,KAAKR,kBACnBjC,KAAMyC,KAAKtB,MAAMC,aAAasB,MAC5B/C,EACAA,EAAe8C,KAAKtB,MAAMxC,gBAE5BiB,QAAS6C,KAAKtB,MAAMC,aAAaG,OACjC5B,aAAcA,EACdhB,eAAgB8D,KAAKtB,MAAMxC,eAC3BkB,eAAgB4C,KAAK5C,eACrBC,eAAgB2C,KAAK3C,eACrBT,SAAUoD,KAAKpD,SACfD,OAAQqD,KAAKtB,MAAM/B,c,GA/JUuD,aCExBC,MARf,WACE,OACE,6BACE,kBAAC,EAAD,CAAW5C,KAAMA,Q,MCLvB6C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.f09cd06f.chunk.js","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\n\nexport default function EmployeeRow({\n  name,\n  location,\n  registered,\n  email,\n  picture\n}) {\n  return (\n    <tr>\n      <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n        <div className=\"flex items-center\">\n          <div className=\"flex-shrink-0 w-10 h-10\">\n            <img\n              className=\"w-full h-full rounded-full\"\n              src={picture.thumbnail}\n              alt=\"\"\n            />\n          </div>\n          <div className=\"ml-3\">\n            <p className=\"text-gray-900 whitespace-no-wrap\">\n              {name.first} {name.last}\n            </p>\n          </div>\n        </div>\n      </td>\n      <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n        <p className=\"text-gray-900 whitespace-no-wrap\">{location.country}</p>\n      </td>\n      <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n        <p className=\"text-gray-900 whitespace-no-wrap\">\n          {moment(registered.date).fromNow()}\n        </p>\n      </td>\n      <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n        <p className=\"text-gray-900 whitespace-no-wrap\">{email}</p>\n      </td>\n    </tr>\n  );\n}\n","import React from \"react\";\n\nexport default function TableSearch({\n  inputHandler,\n  searchTerm,\n  resultsPerPage\n}) {\n  return (\n    <div className=\"my-2 flex sm:flex-row flex-col\">\n      <div className=\"flex flex-row mb-1 sm:mb-0\">\n        <div className=\"relative\">\n          <select\n            name=\"resultsPerPage\"\n            value={resultsPerPage}\n            onChange={inputHandler}\n            className=\"appearance-none h-full rounded-l border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n          >\n            <option>5</option>\n            <option>10</option>\n            <option>20</option>\n          </select>\n          <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n            <svg\n              className=\"fill-current h-4 w-4\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n            >\n              <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n            </svg>\n          </div>\n        </div>\n      </div>\n      <div className=\"block relative\">\n        <span className=\"h-full absolute inset-y-0 left-0 flex items-center pl-2\">\n          <svg\n            viewBox=\"0 0 24 24\"\n            className=\"h-4 w-4 fill-current text-gray-500\"\n          >\n            <path d=\"M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z\"></path>\n          </svg>\n        </span>\n        <input\n          value={searchTerm}\n          name=\"searchTerm\"\n          onChange={inputHandler}\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"appearance-none rounded-r rounded-l sm:rounded-l-none border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function HeaderRow({ sortBy, sortData }) {\n  let className =\n    \"cursor-pointer px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs uppercase tracking-wider \";\n  return (\n    <tr>\n      <th\n        className={\n          sortBy === \"Name\"\n            ? className + \"font-bold text-gray-700\"\n            : className + \"font-semibold text-gray-600\"\n        }\n        onClick={sortData}\n      >\n        Name\n      </th>\n      <th\n        className={\n          sortBy === \"Country\"\n            ? className + \"font-bold text-gray-700\"\n            : className + \"font-semibold text-gray-600\"\n        }\n        onClick={sortData}\n      >\n        Country\n      </th>\n      <th\n        className={\n          sortBy === \"Created date\"\n            ? className + \"font-bold text-gray-700\"\n            : className + \"font-semibold text-gray-600\"\n        }\n        onClick={sortData}\n      >\n        Created date\n      </th>\n      <th\n        className={\n          sortBy === \"Email\"\n            ? className + \"font-bold text-gray-700\"\n            : className + \"font-semibold text-gray-600\"\n        }\n        onClick={sortData}\n      >\n        Email\n      </th>\n    </tr>\n  );\n}\n","import React from \"react\";\n\nexport default function Button({ handleClick, children, className }) {\n  return (\n    <button\n      className={\n        \"text-sm bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-4 \" +\n        className\n      }\n      onClick={handleClick}\n    >\n      {children}\n    </button>\n  );\n}\n","import React from \"react\";\nimport Button from \"./Button\";\n\nexport default function FooterRow({\n  currentIndex,\n  resultsPerPage,\n  results,\n  handlePrevPage,\n  handleNextPage\n}) {\n  return (\n    <div className=\"px-5 py-5 bg-white border-t flex flex-col xs:flex-row items-center xs:justify-between          \">\n      <span className=\"text-xs xs:text-sm text-gray-900\">\n        Showing {currentIndex + 1} to {currentIndex + resultsPerPage} of{\" \"}\n        {results}\n      </span>\n      <div className=\"inline-flex mt-2 xs:mt-0\">\n        <Button handleClick={handlePrevPage} className={\"rounded-l\"}>\n          Prev\n        </Button>\n        <Button handleClick={handleNextPage} className={\"rounded-r\"}>\n          Next\n        </Button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport EmployeeRow from \"./EmployeeRow\";\nimport TableSearch from \"./TableSearch\";\nimport HeaderRow from \"./HeaderRow\";\nimport FooterRow from \"./FooterRow\";\n\nexport default function EmployeeTable({\n  inputHandler,\n  searchTerm,\n  data,\n  results,\n  currentIndex,\n  resultsPerPage,\n  handlePrevPage,\n  handleNextPage,\n  sortData,\n  sortBy\n}) {\n  return (\n    <div className=\"container mx-auto px-4 sm:px-8\">\n      <div className=\"py-8\">\n        <div>\n          <h2 className=\"text-2xl font-semibold leading-tight\">Users</h2>\n        </div>\n        <TableSearch\n          inputHandler={inputHandler}\n          searchTerm={searchTerm}\n          resultsPerPage={resultsPerPage}\n        />\n        <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\n          <div className=\"inline-block min-w-full shadow rounded-lg overflow-hidden\">\n            <table className=\"min-w-full leading-normal\">\n              <thead>\n                <HeaderRow sortBy={sortBy} sortData={sortData} />\n              </thead>\n              <tbody>\n                {data.map((employee, index) => (\n                  <EmployeeRow key={index} {...employee} />\n                ))}\n              </tbody>\n            </table>\n            <FooterRow\n              results={results}\n              currentIndex={currentIndex}\n              resultsPerPage={resultsPerPage}\n              handlePrevPage={handlePrevPage}\n              handleNextPage={handleNextPage}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","export const sortByLastNameAsc = (a, b) => {\n  const nameA = a.name.last.toUpperCase(); // ignore upper and lowercase\n  const nameB = b.name.last.toUpperCase(); // ignore upper and lowercase\n  if (nameA < nameB) {\n    return -1;\n  }\n  if (nameA > nameB) {\n    return 1;\n  }\n  // names must be equal\n  return 0;\n};\n\nexport const sortByLastNameDesc = (a, b) => {\n  const nameA = a.name.last.toUpperCase(); // ignore upper and lowercase\n  const nameB = b.name.last.toUpperCase(); // ignore upper and lowercase\n  if (nameA < nameB) {\n    return 1;\n  }\n  if (nameA > nameB) {\n    return -1;\n  }\n  // names must be equal\n  return 0;\n};\n\nexport const sortByCountryAsc = (a, b) => {\n  const nameA = a.location.country.toUpperCase(); // ignore upper and lowercase\n  const nameB = b.location.country.toUpperCase(); // ignore upper and lowercase\n  if (nameA < nameB) {\n    return -1;\n  }\n  if (nameA > nameB) {\n    return 1;\n  }\n  // names must be equal\n  return 0;\n};\n\nexport const sortByCountryDesc = (a, b) => {\n  const nameA = a.location.country.toUpperCase(); // ignore upper and lowercase\n  const nameB = b.location.country.toUpperCase(); // ignore upper and lowercase\n  if (nameA < nameB) {\n    return 1;\n  }\n  if (nameA > nameB) {\n    return -1;\n  }\n  // names must be equal\n  return 0;\n};\n\nexport const sortByDateAsc = (a, b) => {\n  const nameA = a.registered.date; // ignore upper and lowercase\n  const nameB = b.registered.date; // ignore upper and lowercase\n  if (nameA < nameB) {\n    return -1;\n  }\n  if (nameA > nameB) {\n    return 1;\n  }\n  // names must be equal\n  return 0;\n};\n\nexport const sortByDateDesc = (a, b) => {\n  const nameA = a.registered.date; // ignore upper and lowercase\n  const nameB = b.registered.date; // ignore upper and lowercase\n  if (nameA < nameB) {\n    return 1;\n  }\n  if (nameA > nameB) {\n    return -1;\n  }\n  // names must be equal\n  return 0;\n};\n\nexport const sortByEmailAsc = (a, b) => {\n  const nameA = a.email.toUpperCase(); // ignore upper and lowercase\n  const nameB = b.email.toUpperCase(); // ignore upper and lowercase\n  if (nameA < nameB) {\n    return -1;\n  }\n  if (nameA > nameB) {\n    return 1;\n  }\n  // names must be equal\n  return 0;\n};\n\nexport const sortByEmailDesc = (a, b) => {\n  const nameA = a.email.toUpperCase(); // ignore upper and lowercase\n  const nameB = b.email.toUpperCase(); // ignore upper and lowercase\n  if (nameA < nameB) {\n    return 1;\n  }\n  if (nameA > nameB) {\n    return -1;\n  }\n  // names must be equal\n  return 0;\n};\n","import React, { Component } from \"react\";\nimport EmployeeTable from \"./EmployeeTable\";\nimport {\n  sortByLastNameAsc,\n  sortByLastNameDesc,\n  sortByCountryAsc,\n  sortByCountryDesc,\n  sortByDateAsc,\n  sortByDateDesc,\n  sortByEmailAsc,\n  sortByEmailDesc\n} from \"../utils/sort\";\n\nexport default class Container extends Component {\n  state = {\n    searchTerm: \"\",\n    filteredData: this.props.data,\n    resultsPerPage: 5,\n    pages: this.props.data.length / 5,\n    currentPage: 0,\n    sortBy: \"\",\n    sortType: \"\"\n  };\n\n  sortData = event => {\n    const { textContent } = event.target;\n    console.log(textContent);\n\n    switch (textContent) {\n      case \"Name\":\n        if (this.state.sortType === \"asc\") {\n          this.setState({\n            sortBy: textContent,\n            sortType: \"desc\",\n            filteredData: this.state.filteredData.sort(sortByLastNameDesc)\n          });\n        } else {\n          this.setState({\n            sortBy: textContent,\n            sortType: \"asc\",\n            filteredData: this.state.filteredData.sort(sortByLastNameAsc)\n          });\n        }\n        break;\n      case \"Country\":\n        if (this.state.sortType === \"asc\") {\n          this.setState({\n            sortType: \"desc\",\n            sortBy: event.target.textContent,\n            filteredData: this.state.filteredData.sort(sortByCountryDesc)\n          });\n        } else {\n          this.setState({\n            sortType: \"asc\",\n            sortBy: textContent,\n            filteredData: this.state.filteredData.sort(sortByCountryAsc)\n          });\n        }\n        break;\n      case \"Created date\":\n        if (this.state.sortType === \"asc\") {\n          this.setState({\n            sortType: \"desc\",\n            sortBy: event.target.textContent,\n            filteredData: this.state.filteredData.sort(sortByDateDesc)\n          });\n        } else {\n          this.setState({\n            sortType: \"asc\",\n            sortBy: textContent,\n            filteredData: this.state.filteredData.sort(sortByDateAsc)\n          });\n        }\n        break;\n\n      case \"Email\":\n        if (this.state.sortType === \"asc\") {\n          this.setState({\n            sortType: \"desc\",\n            sortBy: event.target.textContent,\n            filteredData: this.state.filteredData.sort(sortByEmailDesc)\n          });\n        } else {\n          this.setState({\n            sortType: \"asc\",\n            sortBy: textContent,\n            filteredData: this.state.filteredData.sort(sortByEmailAsc)\n          });\n        }\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  handlePrevPage = () => {\n    if (this.state.currentPage > 0) {\n      this.setState({\n        currentPage: this.state.currentPage - 1\n      });\n    }\n  };\n\n  handleNextPage = () => {\n    if (this.state.currentPage < this.state.pages - 1) {\n      this.setState({\n        currentPage: this.state.currentPage + 1\n      });\n    }\n  };\n\n  handleInputChange = event => {\n    // Getting the value and name of the input which triggered the change\n    let { name, value } = event.target;\n\n    if (name === \"searchTerm\") {\n      this.setState(\n        {\n          searchTerm: value,\n          filteredData: this.props.data.filter(({ name, email, location }) => {\n            const searchStr = String(\n              name.first + name.last + email + location.country\n            ).toLowerCase();\n            return searchStr.includes(value.toLowerCase());\n          })\n        },\n        () => {\n          this.setState({\n            currentPage: 0,\n            pages: Math.ceil(\n              this.state.filteredData.length / this.state.resultsPerPage\n            )\n          });\n        }\n      );\n    }\n\n    if (name === \"resultsPerPage\") {\n      this.setState(\n        {\n          resultsPerPage: parseInt(value)\n        },\n        () => {\n          this.setState({\n            currentPage: 0,\n            pages: Math.ceil(\n              this.state.filteredData.length / this.state.resultsPerPage\n            )\n          });\n        }\n      );\n    }\n  };\n\n  render() {\n    const currentIndex = this.state.currentPage * this.state.resultsPerPage;\n    return (\n      <div>\n        <EmployeeTable\n          searchTerm={this.state.searchTerm}\n          inputHandler={this.handleInputChange}\n          data={this.state.filteredData.slice(\n            currentIndex,\n            currentIndex + this.state.resultsPerPage\n          )}\n          results={this.state.filteredData.length}\n          currentIndex={currentIndex}\n          resultsPerPage={this.state.resultsPerPage}\n          handlePrevPage={this.handlePrevPage}\n          handleNextPage={this.handleNextPage}\n          sortData={this.sortData}\n          sortBy={this.state.sortBy}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\n// import some randomly generated user data from https://randomuser.me/\nimport { results as data } from \"./users.json\";\n\nimport Container from \"./components/Container\";\n\nfunction App() {\n  return (\n    <div>\n      <Container data={data} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./styles.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}